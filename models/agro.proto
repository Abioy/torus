syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

package models;

message Metadata {
  uint32 uid = 1;
  uint32 gid = 2;
  uint32 mode = 3;
  uint32 flags = 4;
  uint64 ctime = 5;
  uint64 mtime = 6;
}

message INode {
  uint64 volume = 1;
  uint64 inode = 2 [(gogoproto.customname) = "INode"];
  uint64 chain = 3;
  uint64 filesize = 4;
  repeated string filenames = 5; // Should always be length at least 1, includes hard links
  Metadata permissions = 6;
  map<string, string> attrs = 7;
  repeated BlockLayer blocks = 8;
}

message BlockLayer {
  uint32 type = 1;
  bytes content = 2;
}

message Directory {
  Metadata metadata = 1;
  // key is the filename without the path
  map<string, FileEntry> files = 2;
}

message FileEntry {
  uint64 chain = 1;
  string sympath = 2; 
}

message FileChainSet {
  map<uint64, uint64> chains = 1;
}

message PeerInfo {
  string uuid = 1 [(gogoproto.customname) = "UUID"];
  string address = 2;

  int64 last_seen = 3; // In Unix nanoseconds.
  uint64 total_blocks = 4;
  uint64 used_blocks = 5;
  int64 last_rebalance_finish = 6; // In Unix nanoseconds.
  uint64 last_rebalance_blocks = 7;
  bool rebalancing = 8;

}

message Ring {
  uint32 type = 1;
  uint32 version = 2;
  uint32 replication_factor = 3;
  repeated PeerInfo peers = 4;
  map<string, bytes> attrs = 5;
}


message BlockRef {
	uint64 volume = 1;
	uint64 inode = 2 [(gogoproto.customname) = "INode"];
	uint64 block = 3;
}

message INodeRef {
	uint64 volume = 1;
	uint64 inode = 2 [(gogoproto.customname) = "INode"];
}
